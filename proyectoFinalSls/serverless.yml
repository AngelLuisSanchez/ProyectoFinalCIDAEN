service: cidaen-proyectofinal-back 

package:
  exclude:
    - ./**
  include:
    - handlers/**

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: eu-west-1

  environment:
    S3_BUCKET: cidaen-proyectofinal-files-${self:provider.stage}.albertoangelalberto.com
    DYNAMODB_TABLE: ProyectoFinalCelebrities-${self:provider.stage}

  iamRoleStatements:
    #Ajustar un poco, pero funciona
    - Effect: 'Allow'
      Action: 
        - 'rekognition:*'
      Resource: "*"

    - Effect: Allow
      Action:
        - s3:*
      Resource: arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*

    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  s3-new-image:
    handler: handlers/handler.image_uploaded
    events:
      - s3:
          bucket: ${self:provider.environment.S3_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: input_images/

  s3-url:
    handler: handlers/handler.s3_url
    events:
      - http:
          path: celebrity/{id_celebrity}
          method: get
  
  dynamodb-celebrities:
    handler: handlers/handler.dynamodb_celebrities
    events:
      - http:
          path: celebrities
          method: get

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}