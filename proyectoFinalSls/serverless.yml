service: cidaen-proyectofinal-back 

plugins:
  - serverless-ephemeral

package:
  exclude:
    - ./**
  include:
    - handlers/**

custom:
  ephemeral:
    libraries:
    - packager:
        compose: tf-packager/docker-compose.yml
        service: packager
        output: /tmp/lambda_package.zip

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: eu-west-1
  memorySize: 3008
  timeout: 300

  environment:
    S3_BUCKET: cidaen-proyectofinal-files-${self:provider.stage}.albertoangel2.com
    DYNAMODB_TABLE: ProyectoFinalAnalisisImagenes-${self:provider.stage}

  iamRoleStatements:
    #Ajustar un poco, pero funciona
    - Effect: 'Allow'
      Action: 
        - 'rekognition:*'
      Resource: "*"

    - Effect: Allow
      Action:
        - s3:*
      Resource: arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*

    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  
  obtener-nube-de-palabras:
    handler: handlers/handler.obtener_nube_de_palabras
    events:
      - http:
          path: cloudtags
          method: get
          cors: true

  download-images-elpais:
    handler: handlers/handler.descargar_imagenes_elpais
    events:
      - schedule: cron(00 06 * * ? *)

  download-images-elmundo:
    handler: handlers/handler.descargar_imagenes_elmundo
    events:
      - schedule: cron(05 06 * * ? *)

  download-images-abc:
    handler: handlers/handler.descargar_imagenes_abc
    events:
      - schedule: cron(10 06 * * ? *)

  download-images-diarioes:
    handler: handlers/handler.descargar_imagenes_diarioes
    events:
      - schedule: cron(15 06 * * ? *)

  s3-new-image:
    handler: handlers/handler.image_uploaded
    events:
      - s3:
          bucket: ${self:provider.environment.S3_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: elpais/
      - s3:
          bucket: ${self:provider.environment.S3_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: elmundo/
      - s3:
          bucket: ${self:provider.environment.S3_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: abc/
      - s3:
          bucket: ${self:provider.environment.S3_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: diarioes/


resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          -
            AttributeName: daymonthYear
            AttributeType: S
          -
            AttributeName: idimagen
            AttributeType: S

        KeySchema:
          -
            AttributeName: daymonthYear
            KeyType: HASH
          -
            AttributeName: idimagen
            KeyType: RANGE

        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}